spring.profiles.active=dev
## \u914D\u7F6E\u670D\u52A1\u7AEF\u53E3
server.port=8081

## \u8BBE\u7F6E shardingsphere \u6570\u636E\u6E90 \u540D\u79F0 \u591A\u4E2A\u4EE5 \u9017\u53F7\u5206\u9694 db0,db1
#spring.shardingsphere.datasource.names=ds0
spring.shardingsphere.datasource.names=ds0,ds1

## \u914D\u7F6Eds0\u6570\u636E\u6E90\u5177\u4F53\u5185\u5BB9
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3308/ds0?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

## \u914D\u7F6Eds1\u6570\u636E\u6E90\u5177\u4F53\u5185\u5BB9
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3308/ds1?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

#  ========================================== \u76EE\u524D\u5206\u5E93\u7B56\u7565\u548C\u5206\u8868\u7B56\u7565 \u65E0\u6CD5\u505A\u5230\u5747\u5300\u5206\u5E03 ====================================================
## ========================================== \u5206\u5E93\u7B56\u7565 =============================================================================

################################################################### inline \u884C\u8868\u8FBE\u5F0F\u5206\u7247 #######################################################################################
#### \u8FD9\u91CC\u91C7\u7528\u7528\u6237id\u5B57\u6BB5\u8FDB\u884C\u5206\u5E93
#spring.shardingsphere.sharding.tables.wl_shard_test.database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.tables.wl_shard_test.database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
#
### ========================================== \u5206\u8868\u7B56\u7565 =============================================================================
### \u6307\u5B9A\u5206\u7247\u8868\u4FE1\u606F \u8868\u793A\u5728 ds0\u6570\u636E\u6E90\u7684 wl_shard_test\u8868(\u903B\u8F91\u8868) wl_shard_test_1,wl_shard_test_2\u4E3A\u771F\u5B9E\u8868
spring.shardingsphere.sharding.tables.wl_shard_test.actual-data-nodes=ds$->{0..1}.wl_shard_test_$->{1..2}
#### \u6307\u5B9A\u5206\u7247\u5B57\u6BB5
#spring.shardingsphere.sharding.tables.wl_shard_test.table-strategy.inline.sharding-column=cid
#### \u6307\u5B9A\u5206\u7247\u7B97\u6CD5\u8868\u8FBE\u5F0F, \u8868\u8FBE\u5F0F\u542B\u4E49\u4E3A: \u6839\u636Ecid\u53D6\u6A21 + 1, \u5C31\u662F\u6570\u636E\u6240\u8981\u5B58\u653E\u7684\u8868
#spring.shardingsphere.sharding.tables.wl_shard_test.table-strategy.inline.algorithm-expression=wl_shard_test_$->{cid % 2 +1}
################################################################### inline \u884C\u8868\u8FBE\u5F0F\u5206\u7247 #######################################################################################

################################################################### standard \u6807\u51C6\u5206\u7247 #######################################################################################
# standard \u5206\u7247\u7B56\u7565:  \u652F\u6301 >\uFF0C>=, <=\uFF0C<\uFF0C=\uFF0CIN \u548C BETWEEN AND
#   precise \u7B56\u7565\u652F\u6301 = in \u7B49\u64CD\u4F5C,\u4E0D\u652F\u6301 BETWEEN AND
#   range   \u7B56\u7565\u652F\u6301: BETWEEN AND
# \u540C\u65F6\u5B9E\u73B0precise \u548C  range \u7B97\u6CD5 \u53EF\u6EE1\u8DB3   >\uFF0C>=, <=\uFF0C<\uFF0C=\uFF0CIN \u548C BETWEEN AND
# \u82E5\u5B57\u6BB5A\u5206\u5E93,\u5B57\u6BB5B \u5206\u8868 \u5219 BETWEEN AND \u65F6,\u9700\u8981\u643A\u5E26\u5206\u5E93 \u548C \u5206\u8868\u5B57\u6BB5,\u4E0D\u7136\u65E0\u6CD5\u8DEF\u7531 .
#
## \u4F7F\u7528\u7CBE\u51C6\u7684\u5206\u7247
### \u5E93\u6807\u51C6\u7CBE\u786E\u5206\u7247
#spring.shardingsphere.sharding.tables.wl_shard_test.database-strategy.standard.sharding-column=user_id
#spring.shardingsphere.sharding.tables.wl_shard_test.database-strategy.standard.precise-algorithm-class-name=com.wl.shardingdemo.algo.MyDbPreciseShardingAlgorithm
#### \u5E93\u6807\u51C6\u8303\u56F4\u5206\u7247
#spring.shardingsphere.sharding.tables.wl_shard_test.database-strategy.standard.range-algorithm-class-name=com.wl.shardingdemo.algo.MyDbRangeShardingAlgorithm
#
#### \u8868\u6807\u51C6\u7CBE\u786E\u5206\u7247
#spring.shardingsphere.sharding.tables.wl_shard_test.table-strategy.standard.sharding-column=cid
#spring.shardingsphere.sharding.tables.wl_shard_test.table-strategy.standard.precise-algorithm-class-name=com.wl.shardingdemo.algo.MyTbPreciseShardingAlgorithm
#### \u8868\u6807\u51C6\u8303\u56F4\u5206\u7247
#spring.shardingsphere.sharding.tables.wl_shard_test.table-strategy.standard.range-algorithm-class-name=com.wl.shardingdemo.algo.MyTbRangeShardingAlgorithm
################################################################### standard \u6807\u51C6\u5206\u7247 #######################################################################################

################################################################### complex \u590D\u6742\u5206\u7247 (\u5E94\u4F7F\u7528 4.1.1 \u4F9D\u8D56,\u4E0D\u7136\u7F3A\u5C11 between \u903B\u8F91 getColumnNameAndShardingValuesMap) #######################################################################################
### \u590D\u6742\u5206\u7247
#### \u5E93\u590D\u6742\u5206\u7247 \u5B57\u6BB5
spring.shardingsphere.sharding.tables.wl_shard_test.database-strategy.complex.sharding-columns=user_id
### \u5E93\u590D\u6742\u5206\u7247 \u7B97\u6CD5
spring.shardingsphere.sharding.tables.wl_shard_test.database-strategy.complex.algorithm-class-name=com.wl.shardingdemo.algo.MyDbComplexKeysShardingAlgorithm
### \u8868\u590D\u6742\u5206\u7247\u5B57\u6BB5
spring.shardingsphere.sharding.tables.wl_shard_test.table-strategy.complex.sharding-columns=cid
### \u8868\u590D\u6742\u5206\u7247\u7B97\u6CD5
spring.shardingsphere.sharding.tables.wl_shard_test.table-strategy.complex.algorithm-class-name=com.wl.shardingdemo.algo.MyTbComplexKeysShardingAlgorithm
################################################################### complex \u590D\u6742\u5206\u7247 #######################################################################################

################################################################### hint \u5206\u7247 \u65E0\u9700\u8BBE\u7F6E \u5206\u7247\u952E  #######################################################################################
## hint \u7B56\u7565 \u9700\u8981\u4F7F\u7528 \u540C\u4E00\u4E2A\u5206\u952E\u7247, \u540E\u7EEDvalue\u5B57\u6BB5 \u53EF\u4EE5\u7528\u6765\u63A7\u5236 \u8868\u548C \u5E93\u7684\u9009\u62E9
#spring.shardingsphere.sharding.tables.wl_shard_test.database-strategy.hint.algorithm-class-name=com.wl.shardingdemo.algo.MyDbHintShardingAlgorithm
#spring.shardingsphere.sharding.tables.wl_shard_test.table-strategy.hint.algorithm-class-name=com.wl.shardingdemo.algo.MyTbHintShardingAlgorithm
################################################################### hint \u5206\u7247 \u65E0\u9700\u8BBE\u7F6E \u5206\u7247\u952E  #######################################################################################

### \u4E8C\u8005\u53EA\u80FD\u5B58\u5176\u4E00
## \u6307\u5B9Acid\u7684\u751F\u6210\u7B97\u6CD5
### \u6307\u5B9Acid\u4E3A\u751F\u6210\u5B57\u6BB5
spring.shardingsphere.sharding.tables.wl_shard_test.key-generator.column=cid
### \u91C7\u7528\u96EA\u82B1\u7B97\u6CD5
spring.shardingsphere.sharding.tables.wl_shard_test.key-generator.type=SNOWFLAKE

## \u6253\u5F00 sharding sphere sql\u6253\u5370\u65E5\u5FD7
spring.shardingsphere.props.sql.show=true

## \u5141\u8BB8\u91CD\u590Dbean \u8986\u76D6
spring.main.allow-bean-definition-overriding=true